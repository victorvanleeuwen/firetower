package com.firetower.data_generator.models;

import com.firetower.data_generator.common.models.Server;
import com.firetower.data_generator.models.ServerState;

import java.util.HashMap;
import java.util.Map;

public class MetricProfile {

    public static Map<Integer,Integer> getNormalCpuProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(20,1);
        result.put(21,1);
        result.put(22,2);
        result.put(23,2);
        result.put(24,3);
        result.put(25,3);
        result.put(26,4);
        result.put(27,4);
        result.put(28,5);
        result.put(29,5);
        result.put(30,16);
        result.put(31,16);
        result.put(32,17);
        result.put(33,17);
        result.put(34,18);
        result.put(35,18);
        result.put(36,19);
        result.put(37,19);
        result.put(38,30);
        result.put(39,30);
        result.put(40,55);
        result.put(41,30);
        result.put(42,30);
        result.put(43,19);
        result.put(44,19);
        result.put(45,18);
        result.put(46,18);
        result.put(47,17);
        result.put(48,17);
        result.put(49,16);
        result.put(50,16);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);

        return result;
    }
    public static Map<Integer,Integer> getNormalRamProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(40,1);
        result.put(41,1);
        result.put(42,2);
        result.put(43,2);
        result.put(44,3);
        result.put(45,3);
        result.put(46,4);
        result.put(47,4);
        result.put(48,5);
        result.put(49,5);
        result.put(50,16);
        result.put(51,16);
        result.put(52,17);
        result.put(53,17);
        result.put(54,28);
        result.put(55,29);
        result.put(56,28);
        result.put(57,17);
        result.put(58,17);
        result.put(59,16);
        result.put(60,6);
        result.put(61,5);
        result.put(62,5);
        result.put(63,4);
        result.put(64,4);
        result.put(65,3);
        result.put(66,3);
        result.put(67,2);
        result.put(68,2);
        result.put(69,1);
        result.put(70,1);

        return result;
    }
    public static Map<Integer,Integer> getNormalnetworkUpMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();
        result.put(50,1);
        result.put(55,1);
        result.put(60,2);
        result.put(65,2);
        result.put(70,3);
        result.put(75,3);
        result.put(80,4);
        result.put(85,4);
        result.put(90,5);
        result.put(95,5);
        result.put(100,6);
        result.put(105,6);
        result.put(110,7);
        result.put(115,7);
        result.put(120,8);
        result.put(125,8);
        result.put(130,9);
        result.put(135,9);
        result.put(140,10);
        result.put(145,10);
        result.put(150,11);
        result.put(155,11);
        result.put(160,12);
        result.put(165,12);
        result.put(170,13);
        result.put(175,13);
        result.put(180,14);
        result.put(185,14);
        result.put(190,25);
        result.put(195,25);
        result.put(200,26);
        result.put(205,26);
        result.put(210,27);
        result.put(215,27);
        result.put(220,28);
        result.put(225,28);
        result.put(230,29);
        result.put(235,29);
        result.put(240,30);
        result.put(245,35);
        result.put(250,35);
        result.put(255,40);
        result.put(260,40);
        result.put(265,45);
        result.put(270,50);
        result.put(275,50);
        result.put(280,45);
        result.put(285,40);
        result.put(290,40);
        result.put(295,35);
        result.put(300,35);
        result.put(305,30);
        result.put(310,30);
        result.put(315,29);
        result.put(320,29);
        result.put(325,28);
        result.put(330,28);
        result.put(335,27);
        result.put(340,27);
        result.put(345,26);
        result.put(350,26);
        result.put(355,25);
        result.put(360,25);
        result.put(365,14);
        result.put(370,14);
        result.put(375,13);
        result.put(380,13);
        result.put(385,12);
        result.put(390,12);
        result.put(395,11);
        result.put(400,11);
        result.put(405,10);
        result.put(410,10);
        result.put(415,9);
        result.put(420,9);
        result.put(425,8);
        result.put(430,8);
        result.put(435,7);
        result.put(440,7);
        result.put(445,6);
        result.put(450,6);
        result.put(455,5);
        result.put(460,5);
        result.put(465,4);
        result.put(470,4);
        result.put(475,3);
        result.put(480,3);
        result.put(485,2);
        result.put(490,2);
        result.put(495,1);
        result.put(500,1);

        return result;
    }
    public static Map<Integer,Integer> getNormalnetworDownMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(50,1);
        result.put(55,1);
        result.put(60,1);
        result.put(65,1);
        result.put(70,1);
        result.put(75,1);
        result.put(80,1);
        result.put(85,1);
        result.put(90,1);
        result.put(95,1);
        result.put(100,1);
        result.put(105,1);
        result.put(110,1);
        result.put(115,1);
        result.put(120,1);
        result.put(125,1);
        result.put(130,1);
        result.put(135,1);
        result.put(140,1);
        result.put(145,1);
        result.put(150,1);
        result.put(155,1);
        result.put(160,1);
        result.put(165,1);
        result.put(170,1);
        result.put(175,1);
        result.put(180,1);
        result.put(185,1);
        result.put(190,1);
        result.put(195,1);
        result.put(200,1);

        return result;

    }
    public static Map<Integer,Integer> getNormalhardDriveUsageMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(20,1);
        result.put(21,1);
        result.put(22,2);
        result.put(23,2);
        result.put(24,3);
        result.put(25,3);
        result.put(26,4);
        result.put(27,4);
        result.put(28,5);
        result.put(29,5);
        result.put(30,16);
        result.put(31,16);
        result.put(32,17);
        result.put(33,17);
        result.put(34,18);
        result.put(35,18);
        result.put(36,19);
        result.put(37,19);
        result.put(38,20);
        result.put(39,20);
        result.put(40,25);
        result.put(41,20);
        result.put(42,20);
        result.put(43,19);
        result.put(44,19);
        result.put(45,18);
        result.put(46,18);
        result.put(47,17);
        result.put(48,17);
        result.put(49,16);
        result.put(50,16);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);

        return result;

    }

    public static Map<Integer,Integer> getmalicousCpuProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(1,1);
        result.put(2,1);
        result.put(3,1);
        result.put(4,1);
        result.put(5,1);
        result.put(6,1);
        result.put(7,1);
        result.put(8,1);
        result.put(9,1);
        result.put(10,1);
        result.put(11,1);
        result.put(12,1);
        result.put(13,1);
        result.put(14,1);
        result.put(15,1);
        result.put(16,1);
        result.put(17,1);
        result.put(18,1);
        result.put(19,1);
        result.put(20,1);
        result.put(21,1);
        result.put(22,1);
        result.put(23,1);
        result.put(24,1);
        result.put(25,1);
        result.put(26,1);
        result.put(27,1);
        result.put(28,1);
        result.put(29,1);
        result.put(30,1);
        result.put(31,1);
        result.put(32,1);
        result.put(33,1);
        result.put(34,1);
        result.put(35,1);
        result.put(36,1);
        result.put(37,1);
        result.put(38,1);
        result.put(39,1);
        result.put(40,1);
        result.put(41,1);
        result.put(42,1);
        result.put(43,1);
        result.put(44,1);
        result.put(45,1);
        result.put(46,1);
        result.put(47,1);
        result.put(48,1);
        result.put(49,1);
        result.put(50,1);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);
        result.put(61,3);
        result.put(62,3);
        result.put(63,1);
        result.put(64,1);
        result.put(65,1);
        result.put(66,1);
        result.put(67,1);
        result.put(68,1);
        result.put(69,1);
        result.put(70,1);
        result.put(71,5);
        result.put(72,5);
        result.put(73,4);
        result.put(74,4);
        result.put(75,3);
        result.put(76,3);
        result.put(77,2);
        result.put(78,2);
        result.put(79,1);
        result.put(80,1);
        result.put(81,5);
        result.put(82,3);
        result.put(83,1);
        result.put(84,1);
        result.put(85,1);
        result.put(86,1);
        result.put(87,1);
        result.put(88,1);
        result.put(89,1);
        result.put(90,11);
        result.put(91,11);
        result.put(92,11);
        result.put(93,11);
        result.put(94,12);
        result.put(95,17);
        result.put(96,10);
        result.put(97,15);
        result.put(98,11);
        result.put(99,16);
        result.put(100,10);

        return result;
    }
    public static Map<Integer,Integer> getmalicousRamProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();
        result.put(20,1);
        result.put(21,1);
        result.put(22,1);
        result.put(23,1);
        result.put(24,1);
        result.put(25,1);
        result.put(26,1);
        result.put(27,1);
        result.put(28,1);
        result.put(29,1);
        result.put(30,1);
        result.put(31,1);
        result.put(32,1);
        result.put(33,1);
        result.put(34,1);
        result.put(35,1);
        result.put(36,1);
        result.put(37,1);
        result.put(38,1);
        result.put(39,1);
        result.put(40,1);
        result.put(41,1);
        result.put(42,1);
        result.put(43,1);
        result.put(44,1);
        result.put(45,1);
        result.put(46,1);
        result.put(47,1);
        result.put(48,1);
        result.put(49,1);
        result.put(50,1);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);
        result.put(61,3);
        result.put(62,3);
        result.put(63,1);
        result.put(64,1);
        result.put(65,1);
        result.put(66,1);
        result.put(67,1);
        result.put(68,1);
        result.put(69,1);
        result.put(70,1);
        result.put(71,5);
        result.put(72,5);
        result.put(73,4);
        result.put(74,4);
        result.put(75,3);
        result.put(76,3);
        result.put(77,2);
        result.put(78,2);
        result.put(79,1);
        result.put(80,11);
        result.put(81,15);
        result.put(82,13);
        result.put(83,11);
        result.put(84,11);
        result.put(85,11);
        result.put(86,11);
        result.put(87,11);
        result.put(88,11);
        result.put(89,11);
        result.put(90,21);
        result.put(91,21);
        result.put(92,21);
        result.put(93,21);
        result.put(94,22);
        result.put(95,27);
        result.put(96,20);
        result.put(97,25);
        result.put(98,15);
        result.put(99,16);
        result.put(100,10);

        return result;
    }
    public static Map<Integer,Integer> getmalicousnetworkUpMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(2000,1);
        result.put(3000,2);
        result.put(4000,3);
        result.put(5000,4);
        result.put(6000,5);
        result.put(7000,6);
        result.put(8000,7);
        result.put(9000,8);
        result.put(10000,9);
        result.put(11000,10);
        result.put(12000,11);
        result.put(13000,12);
        result.put(14000,13);
        result.put(15000,14);
        result.put(16000,15);
        result.put(17000,16);
        result.put(18000,17);
        result.put(19000,18);
        result.put(20000,19);
        result.put(21000,20);
        result.put(22000,21);
        result.put(23000,22);
        result.put(24000,23);
        result.put(25000,24);
        result.put(26000,25);
        result.put(27000,24);
        result.put(28000,23);
        result.put(29000,22);
        result.put(30000,21);
        result.put(31000,20);
        result.put(32000,19);
        result.put(33000,18);
        result.put(34000,17);
        result.put(35000,16);
        result.put(36000,15);
        result.put(37000,14);
        result.put(38000,13);
        result.put(39000,12);
        result.put(40000,11);
        result.put(41000,10);
        result.put(42000,9);
        result.put(43000,8);
        result.put(44000,7);
        result.put(45000,6);
        result.put(46000,5);
        result.put(47000,4);
        result.put(48000,3);
        result.put(49000,2);
        result.put(50000,1);
        return result;
    }
    public static Map<Integer,Integer> getmalicousnetworDownMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(2000,1);
        result.put(3000,2);
        result.put(4000,3);
        result.put(5000,4);
        result.put(6000,5);
        result.put(7000,6);
        result.put(8000,7);
        result.put(9000,8);
        result.put(10000,9);
        result.put(11000,10);
        result.put(12000,11);
        result.put(13000,12);
        result.put(14000,13);
        result.put(15000,14);
        result.put(16000,15);
        result.put(17000,16);
        result.put(18000,17);
        result.put(19000,18);
        result.put(20000,19);
        result.put(21000,20);
        result.put(22000,21);
        result.put(23000,22);
        result.put(24000,23);
        result.put(25000,24);
        return result;
    }
    public static Map<Integer,Integer> getmalicoushardDriveUsageMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(20,1);
        result.put(21,1);
        result.put(22,2);
        result.put(23,2);
        result.put(24,3);
        result.put(25,3);
        result.put(26,4);
        result.put(27,4);
        result.put(28,5);
        result.put(29,5);
        result.put(30,16);
        result.put(31,16);
        result.put(32,17);
        result.put(33,17);
        result.put(34,14);
        result.put(35,14);
        result.put(36,19);
        result.put(37,19);
        result.put(38,10);
        result.put(39,10);
        result.put(40,15);
        result.put(41,10);
        result.put(42,10);
        result.put(43,19);
        result.put(44,19);
        result.put(45,18);
        result.put(46,18);
        result.put(47,17);
        result.put(48,17);
        result.put(49,16);
        result.put(50,16);
        result.put(51,15);
        result.put(52,15);
        result.put(53,24);
        result.put(54,24);
        result.put(55,23);
        result.put(56,23);
        result.put(57,22);
        result.put(58,22);
        result.put(59,21);
        result.put(60,21);

        return result;
    }

    public static Map<Integer,Integer> getHeavyLoadCpuProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(70,1);
        result.put(71,5);
        result.put(72,5);
        result.put(73,4);
        result.put(74,4);
        result.put(75,3);
        result.put(76,3);
        result.put(77,2);
        result.put(78,2);
        result.put(79,1);
        result.put(80,1);
        result.put(81,5);
        result.put(82,3);
        result.put(83,1);
        result.put(84,1);
        result.put(85,1);
        result.put(86,1);
        result.put(87,1);
        result.put(88,1);
        result.put(89,1);
        result.put(90,11);
        result.put(91,11);
        result.put(92,11);
        result.put(93,11);
        result.put(94,12);
        result.put(95,17);
        result.put(96,10);
        result.put(97,15);
        result.put(98,11);
        result.put(99,16);
        result.put(100,10);

        return result;
    }
    public static Map<Integer,Integer> getHeavyLoadRamProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(80,1);
        result.put(81,2);
        result.put(82,3);
        result.put(83,4);
        result.put(84,5);
        result.put(85,6);
        result.put(86,7);
        result.put(87,8);
        result.put(88,9);
        result.put(89,10);
        result.put(90,11);
        result.put(91,12);
        result.put(92,13);
        result.put(93,14);
        result.put(94,15);
        result.put(95,16);
        result.put(96,17);
        result.put(97,18);
        result.put(98,19);
        result.put(99,20);
        result.put(100,21);

        return result;
    }
    public static Map<Integer,Integer> getHeavyLoadnetworkUpMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(50,1);
        result.put(55,1);
        result.put(60,2);
        result.put(65,2);
        result.put(70,3);
        result.put(75,3);
        result.put(80,4);
        result.put(85,4);
        result.put(90,5);
        result.put(95,5);
        result.put(100,6);
        result.put(105,6);
        result.put(110,7);
        result.put(115,7);
        result.put(120,8);
        result.put(125,8);
        result.put(130,9);
        result.put(135,9);
        result.put(140,10);
        result.put(145,20);
        result.put(150,31);
        result.put(155,11);
        result.put(160,12);
        result.put(165,12);
        result.put(170,13);
        result.put(175,13);
        result.put(180,14);
        result.put(185,14);
        result.put(190,25);
        result.put(195,25);
        result.put(200,26);
        result.put(205,26);
        result.put(210,27);
        result.put(215,27);
        result.put(220,28);
        result.put(225,28);
        result.put(230,29);
        result.put(235,29);
        result.put(240,30);
        result.put(245,35);
        result.put(250,35);
        result.put(255,40);
        result.put(260,40);
        result.put(265,45);
        result.put(270,50);
        result.put(275,50);
        result.put(280,45);
        result.put(285,40);
        result.put(290,40);
        result.put(295,35);
        result.put(300,35);
        result.put(305,30);
        result.put(310,30);
        result.put(315,29);
        result.put(320,29);
        result.put(325,28);
        result.put(330,28);
        result.put(335,27);
        result.put(340,27);
        result.put(345,26);
        result.put(350,26);
        result.put(355,25);
        result.put(360,25);
        result.put(365,14);
        result.put(370,14);
        result.put(375,13);
        result.put(380,13);
        result.put(385,12);
        result.put(390,12);
        result.put(395,11);
        result.put(400,11);
        result.put(405,10);
        result.put(410,10);
        result.put(415,9);
        result.put(420,9);
        result.put(425,8);
        result.put(430,8);
        result.put(435,7);
        result.put(440,7);
        result.put(445,6);
        result.put(450,6);
        result.put(455,5);
        result.put(460,5);
        result.put(465,4);
        result.put(470,4);
        result.put(475,3);
        result.put(480,3);
        result.put(485,2);
        result.put(490,2);
        result.put(495,1);
        result.put(500,1);

        return result;
    }
    public static Map<Integer,Integer> getHeavyLoadnetworDownMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(50,1);
        result.put(55,1);
        result.put(60,1);
        result.put(65,1);
        result.put(70,1);
        result.put(75,1);
        result.put(80,1);
        result.put(85,1);
        result.put(90,1);
        result.put(95,1);
        result.put(100,2);
        result.put(105,3);
        result.put(110,4);
        result.put(115,5);
        result.put(120,6);
        result.put(125,7);
        result.put(130,8);
        result.put(135,1);
        result.put(140,1);
        result.put(145,1);
        result.put(150,1);
        result.put(155,1);
        result.put(160,1);
        result.put(165,1);
        result.put(170,1);
        result.put(175,6);
        result.put(180,5);
        result.put(185,4);
        result.put(190,3);
        result.put(195,2);
        result.put(200,1);

        return result;
    }
    public static Map<Integer,Integer> getHeavyLoadhardDriveUsageMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(20,1);
        result.put(21,1);
        result.put(22,2);
        result.put(23,2);
        result.put(24,3);
        result.put(25,3);
        result.put(26,4);
        result.put(27,4);
        result.put(28,5);
        result.put(29,5);
        result.put(30,16);
        result.put(31,16);
        result.put(32,17);
        result.put(33,17);
        result.put(34,18);
        result.put(35,18);
        result.put(36,19);
        result.put(37,19);
        result.put(38,30);
        result.put(39,30);
        result.put(40,55);
        result.put(41,30);
        result.put(42,30);
        result.put(43,19);
        result.put(44,19);
        result.put(45,18);
        result.put(46,18);
        result.put(47,17);
        result.put(48,17);
        result.put(49,16);
        result.put(50,16);
        result.put(51,15);
        result.put(52,15);
        result.put(53,14);
        result.put(54,14);
        result.put(55,13);
        result.put(56,13);
        result.put(57,12);
        result.put(58,12);
        result.put(59,11);
        result.put(60,11);

        return result;
    }

    public static Map<Integer,Integer> getSoftWareissueCpuProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();


        result.put(20,10);
        result.put(21,10);
        result.put(22,10);
        result.put(23,10);
        result.put(24,10);
        result.put(25,1);
        result.put(26,1);
        result.put(27,1);
        result.put(28,1);
        result.put(29,1);
        result.put(30,1);
        result.put(31,1);
        result.put(32,1);
        result.put(33,1);
        result.put(34,1);
        result.put(35,1);
        result.put(36,1);
        result.put(37,1);
        result.put(38,1);
        result.put(39,1);
        result.put(40,1);
        result.put(41,1);
        result.put(42,1);
        result.put(43,1);
        result.put(44,1);
        result.put(45,1);
        result.put(46,1);
        result.put(47,1);
        result.put(48,1);
        result.put(49,1);
        result.put(50,1);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);
        result.put(61,3);
        result.put(62,3);
        result.put(63,1);
        result.put(64,1);
        result.put(65,1);
        result.put(66,1);
        result.put(67,1);
        result.put(68,1);
        result.put(69,1);
        result.put(70,1);
        result.put(71,5);
        result.put(72,5);
        result.put(73,4);
        result.put(74,4);
        result.put(75,3);
        result.put(76,3);
        result.put(77,2);
        result.put(78,2);
        result.put(79,1);
        result.put(80,1);
        result.put(81,5);
        result.put(82,3);
        result.put(83,1);
        result.put(84,1);
        result.put(85,1);
        result.put(86,1);
        result.put(87,1);
        result.put(88,1);
        result.put(89,1);
        result.put(90,11);
        result.put(91,11);
        result.put(92,11);
        result.put(93,11);
        result.put(94,12);
        result.put(95,17);
        result.put(96,10);
        result.put(97,15);
        result.put(98,11);
        result.put(99,16);
        result.put(100,10);

        return result;
    }
    public static Map<Integer,Integer> getSoftWareissueRamProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(25,1);
        result.put(26,1);
        result.put(27,1);
        result.put(28,1);
        result.put(29,1);
        result.put(30,1);
        result.put(31,1);
        result.put(32,1);
        result.put(33,1);
        result.put(34,1);
        result.put(35,1);
        result.put(36,1);
        result.put(37,1);
        result.put(38,1);
        result.put(39,1);
        result.put(40,1);
        result.put(41,1);
        result.put(42,1);
        result.put(43,1);
        result.put(44,1);
        result.put(45,1);
        result.put(46,1);
        result.put(47,1);
        result.put(48,1);
        result.put(49,1);
        result.put(50,1);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);
        result.put(61,3);
        result.put(62,3);
        result.put(63,1);
        result.put(64,1);
        result.put(65,1);
        result.put(66,1);
        result.put(67,1);
        result.put(68,1);
        result.put(69,1);
        result.put(70,1);
        result.put(71,5);
        result.put(72,5);
        result.put(73,5);
        result.put(74,5);
        result.put(75,5);
        result.put(76,6);
        result.put(77,6);
        result.put(78,6);
        result.put(79,7);
        result.put(80,7);
        result.put(81,8);
        result.put(82,8);
        result.put(83,9);
        result.put(84,9);
        result.put(85,9);
        result.put(86,9);
        result.put(87,9);
        result.put(88,10);
        result.put(89,10);
        result.put(90,11);
        result.put(91,11);
        result.put(92,11);
        result.put(93,11);
        result.put(94,12);
        result.put(95,17);
        result.put(96,10);
        result.put(97,15);
        result.put(98,11);
        result.put(99,16);
        result.put(100,10);

        return result;
    }
    public static Map<Integer,Integer> getSoftWareissueNetworkUpMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();
        result.put(50,1);
        result.put(55,1);
        result.put(60,2);
        result.put(65,2);
        result.put(70,3);
        result.put(75,3);
        result.put(80,4);
        result.put(85,4);
        result.put(90,5);
        result.put(95,5);
        result.put(100,6);
        result.put(105,6);
        result.put(110,7);
        result.put(115,7);
        result.put(120,8);
        result.put(125,8);
        result.put(130,9);
        result.put(135,9);
        result.put(140,10);
        result.put(145,10);
        result.put(150,11);
        result.put(155,11);
        result.put(160,12);
        result.put(165,12);
        result.put(170,13);
        result.put(175,13);
        result.put(180,14);
        result.put(185,14);
        result.put(190,25);
        result.put(195,25);
        result.put(200,26);
        result.put(205,26);
        result.put(210,27);
        result.put(215,27);
        result.put(220,18);
        result.put(225,18);
        result.put(230,19);
        result.put(235,19);
        result.put(240,20);
        result.put(245,15);
        result.put(250,25);
        result.put(255,20);
        result.put(260,20);
        result.put(265,25);
        result.put(270,20);
        result.put(275,20);
        result.put(280,45);
        result.put(285,10);
        result.put(290,10);
        result.put(295,15);
        result.put(300,15);
        result.put(305,10);
        result.put(310,10);
        result.put(315,19);
        result.put(320,19);
        result.put(325,18);
        result.put(330,18);
        result.put(335,17);
        result.put(340,17);
        result.put(345,16);
        result.put(350,16);
        result.put(355,15);
        result.put(360,15);
        result.put(365,14);
        result.put(370,14);
        result.put(375,13);
        result.put(380,13);
        result.put(385,12);
        result.put(390,12);
        result.put(395,11);
        result.put(400,11);
        result.put(405,10);
        result.put(410,10);
        result.put(415,9);
        result.put(420,9);
        result.put(425,8);
        result.put(430,8);
        result.put(435,7);
        result.put(440,7);
        result.put(445,6);
        result.put(450,6);
        result.put(455,5);
        result.put(460,5);
        result.put(465,4);
        result.put(470,4);
        result.put(475,3);
        result.put(480,3);
        result.put(485,2);
        result.put(490,2);
        result.put(495,1);
        result.put(500,1);
        return result;
    }
    public static Map<Integer,Integer> getSoftWareissueNetworDownMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(50,1);
        result.put(55,1);
        result.put(60,1);
        result.put(65,1);
        result.put(70,1);
        result.put(75,1);
        result.put(80,1);
        result.put(85,1);
        result.put(90,1);
        result.put(95,1);
        result.put(100,1);
        result.put(105,1);
        result.put(110,1);
        result.put(115,1);
        result.put(120,1);
        result.put(125,1);
        result.put(130,1);
        result.put(135,1);
        result.put(140,2);
        result.put(145,3);
        result.put(150,4);
        result.put(155,5);
        result.put(160,6);
        result.put(165,7);
        result.put(170,8);
        result.put(175,9);
        result.put(180,1);
        result.put(185,1);
        result.put(190,1);
        result.put(195,1);
        result.put(200,1);

        return result;
    }
    public static Map<Integer,Integer> getSoftWareissueHardDriveUsageMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();


        result.put(10,1);
        result.put(11,1);
        result.put(12,1);
        result.put(13,1);
        result.put(14,1);
        result.put(15,1);
        result.put(16,1);
        result.put(17,1);
        result.put(18,1);
        result.put(19,1);
        result.put(20,1);
        result.put(21,1);
        result.put(22,1);
        result.put(23,1);
        result.put(24,1);
        result.put(25,1);
        result.put(26,1);
        result.put(27,1);
        result.put(28,1);
        result.put(29,1);
        result.put(30,1);
        result.put(31,1);
        result.put(32,1);
        result.put(33,1);
        result.put(34,1);
        result.put(35,1);
        result.put(36,1);
        result.put(37,1);
        result.put(38,1);
        result.put(39,1);
        result.put(40,1);
        result.put(41,1);
        result.put(42,1);
        result.put(43,1);
        result.put(44,1);
        result.put(45,1);
        result.put(46,1);
        result.put(47,1);
        result.put(48,1);
        result.put(49,1);
        result.put(50,1);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);
        result.put(61,3);
        result.put(62,3);
        result.put(63,1);
        result.put(64,1);
        result.put(65,1);
        result.put(66,1);
        result.put(67,1);
        result.put(68,1);
        result.put(69,1);
        result.put(70,1);
        result.put(71,5);
        result.put(72,5);
        result.put(73,4);
        result.put(74,4);
        result.put(75,3);
        result.put(76,3);
        result.put(77,2);
        result.put(78,2);
        result.put(79,1);
        result.put(80,1);
        result.put(81,5);
        result.put(82,3);
        result.put(83,1);
        result.put(84,1);
        result.put(85,1);
        result.put(86,1);
        result.put(87,1);
        result.put(88,1);
        result.put(89,1);
        result.put(90,11);
        result.put(91,11);
        result.put(92,11);
        result.put(93,11);
        result.put(94,12);
        result.put(95,17);
        result.put(96,10);
        result.put(97,15);
        result.put(98,11);
        result.put(99,16);
        result.put(100,10);

        return result;
    }

    public static Map<Integer,Integer> getHardWareissueCpuProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(1,19);
        result.put(2,18);
        result.put(3,17);
        result.put(4,16);
        result.put(5,15);
        result.put(6,14);
        result.put(7,13);
        result.put(8,12);
        result.put(9,11);
        result.put(10,1);
        result.put(11,1);
        result.put(12,1);
        result.put(13,1);
        result.put(14,1);
        result.put(15,1);
        result.put(16,1);
        result.put(17,1);
        result.put(18,1);
        result.put(19,1);
        result.put(20,1);
        result.put(21,1);
        result.put(22,1);
        result.put(23,1);
        result.put(24,1);
        result.put(25,1);
        result.put(26,1);
        result.put(27,1);
        result.put(28,1);
        result.put(29,1);
        result.put(30,1);
        result.put(31,1);
        result.put(32,1);
        result.put(33,1);
        result.put(34,1);
        result.put(35,1);
        result.put(36,1);
        result.put(37,1);
        result.put(38,1);
        result.put(39,1);
        result.put(40,1);
        result.put(41,1);
        result.put(42,1);
        result.put(43,1);
        result.put(44,1);
        result.put(45,1);
        result.put(46,1);
        result.put(47,1);
        result.put(48,1);
        result.put(49,1);
        result.put(50,1);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);
        result.put(61,3);
        result.put(62,3);
        result.put(63,1);
        result.put(64,1);
        result.put(65,1);
        result.put(66,1);
        result.put(67,1);
        result.put(68,1);
        result.put(69,1);
        result.put(70,1);
        result.put(71,5);
        result.put(72,5);
        result.put(73,4);
        result.put(74,4);
        result.put(75,3);
        result.put(76,3);
        result.put(77,2);
        result.put(78,2);
        result.put(79,1);
        result.put(80,1);
        result.put(81,5);
        result.put(82,3);
        result.put(83,1);
        result.put(84,1);
        result.put(85,1);
        result.put(86,1);
        result.put(87,1);
        result.put(88,1);
        result.put(89,1);
        result.put(90,11);
        result.put(91,12);
        result.put(92,13);
        result.put(93,14);
        result.put(94,15);
        result.put(95,16);
        result.put(96,17);
        result.put(97,18);
        result.put(98,19);
        result.put(99,20);
        result.put(100,21);

        return result;
    }
    public static Map<Integer,Integer> getHardWareissueRamProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(1,19);
        result.put(2,18);
        result.put(3,17);
        result.put(4,16);
        result.put(5,15);
        result.put(6,14);
        result.put(7,13);
        result.put(8,12);
        result.put(9,11);
        result.put(10,1);
        result.put(11,1);
        result.put(12,1);
        result.put(13,1);
        result.put(14,1);
        result.put(15,1);
        result.put(16,1);
        result.put(17,1);
        result.put(18,1);
        result.put(19,1);
        result.put(20,1);
        result.put(21,1);
        result.put(22,1);
        result.put(23,1);
        result.put(24,1);
        result.put(25,1);
        result.put(26,1);
        result.put(27,1);
        result.put(28,1);
        result.put(29,1);
        result.put(30,1);
        result.put(31,1);
        result.put(32,1);
        result.put(33,1);
        result.put(34,1);
        result.put(35,1);
        result.put(36,1);
        result.put(37,1);
        result.put(38,1);
        result.put(39,1);
        result.put(40,1);
        result.put(41,1);
        result.put(42,1);
        result.put(43,1);
        result.put(44,1);
        result.put(45,1);
        result.put(46,1);
        result.put(47,1);
        result.put(48,1);
        result.put(49,1);
        result.put(50,1);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);
        result.put(61,3);
        result.put(62,3);
        result.put(63,1);
        result.put(64,1);
        result.put(65,1);
        result.put(66,1);
        result.put(67,1);
        result.put(68,1);
        result.put(69,1);
        result.put(70,1);
        result.put(71,5);
        result.put(72,5);
        result.put(73,5);
        result.put(74,5);
        result.put(75,5);
        result.put(76,6);
        result.put(77,6);
        result.put(78,6);
        result.put(79,7);
        result.put(80,7);
        result.put(81,8);
        result.put(82,8);
        result.put(83,9);
        result.put(84,9);
        result.put(85,9);
        result.put(86,9);
        result.put(87,9);
        result.put(88,10);
        result.put(89,10);
        result.put(90,11);
        result.put(91,11);
        result.put(92,11);
        result.put(93,11);
        result.put(94,12);
        result.put(95,17);
        result.put(96,10);
        result.put(97,15);
        result.put(98,11);
        result.put(99,16);
        result.put(100,10);

        return result;
    }
    public static Map<Integer,Integer> getHardWareissueNetworkUpMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();
        result.put(50,1);
        result.put(55,1);
        result.put(60,2);
        result.put(65,2);
        result.put(70,3);
        result.put(75,3);
        result.put(80,4);
        result.put(85,4);
        result.put(90,5);
        result.put(95,5);
        result.put(100,6);
        result.put(105,6);
        result.put(110,7);
        result.put(115,7);
        result.put(120,8);
        result.put(125,8);
        result.put(130,9);
        result.put(135,9);
        result.put(140,10);
        result.put(145,10);
        result.put(150,11);
        result.put(155,11);
        result.put(160,12);
        result.put(165,12);
        result.put(170,13);
        result.put(175,13);
        result.put(180,14);
        result.put(185,14);
        result.put(190,25);
        result.put(195,25);
        result.put(200,26);
        result.put(205,26);
        result.put(210,27);
        result.put(215,27);
        result.put(220,18);
        result.put(225,18);
        result.put(230,19);
        result.put(235,19);
        result.put(240,20);
        result.put(245,15);
        result.put(250,25);
        result.put(255,20);
        result.put(260,20);
        result.put(265,25);
        result.put(270,20);
        result.put(275,20);
        result.put(280,45);
        result.put(285,10);
        result.put(290,10);
        result.put(295,15);
        result.put(300,15);
        result.put(305,10);
        result.put(310,10);
        result.put(315,19);
        result.put(320,19);
        result.put(325,18);
        result.put(330,18);
        result.put(335,17);
        result.put(340,17);
        result.put(345,16);
        result.put(350,16);
        result.put(355,15);
        result.put(360,15);
        result.put(365,14);
        result.put(370,14);
        result.put(375,13);
        result.put(380,13);
        result.put(385,12);
        result.put(390,12);
        result.put(395,11);
        result.put(400,11);
        result.put(405,10);
        result.put(410,10);
        result.put(415,19);
        result.put(420,19);
        result.put(425,18);
        result.put(430,18);
        result.put(435,17);
        result.put(440,17);
        result.put(445,6);
        result.put(450,6);
        result.put(455,5);
        result.put(460,5);
        result.put(465,4);
        result.put(470,4);
        result.put(475,3);
        result.put(480,3);
        result.put(485,2);
        result.put(490,2);
        result.put(495,1);
        result.put(500,1);
        return result;
    }
    public static Map<Integer,Integer> getHardWareissueNetworDownMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();

        result.put(50,1);
        result.put(55,1);
        result.put(60,1);
        result.put(65,1);
        result.put(70,1);
        result.put(75,1);
        result.put(80,1);
        result.put(85,1);
        result.put(90,1);
        result.put(95,1);
        result.put(100,1);
        result.put(105,1);
        result.put(110,1);
        result.put(115,1);
        result.put(120,1);
        result.put(125,1);
        result.put(130,1);
        result.put(135,1);
        result.put(140,2);
        result.put(145,3);
        result.put(150,4);
        result.put(155,5);
        result.put(160,6);
        result.put(165,7);
        result.put(170,8);
        result.put(175,9);
        result.put(180,1);
        result.put(185,1);
        result.put(190,1);
        result.put(195,1);
        result.put(200,1);

        return result;
    }
    public static Map<Integer,Integer> getHardWareissueHardDriveUsageMetricProfile(){
        HashMap<Integer,Integer> result = new HashMap<Integer,Integer>();


        result.put(10,1);
        result.put(11,1);
        result.put(12,1);
        result.put(13,1);
        result.put(14,1);
        result.put(15,1);
        result.put(16,1);
        result.put(17,1);
        result.put(18,1);
        result.put(19,1);
        result.put(20,1);
        result.put(21,1);
        result.put(22,1);
        result.put(23,1);
        result.put(24,1);
        result.put(25,1);
        result.put(26,1);
        result.put(27,1);
        result.put(28,1);
        result.put(29,1);
        result.put(30,1);
        result.put(31,1);
        result.put(32,1);
        result.put(33,1);
        result.put(34,1);
        result.put(35,1);
        result.put(36,1);
        result.put(37,1);
        result.put(38,1);
        result.put(39,1);
        result.put(40,1);
        result.put(41,1);
        result.put(42,1);
        result.put(43,1);
        result.put(44,1);
        result.put(45,1);
        result.put(46,1);
        result.put(47,1);
        result.put(48,1);
        result.put(49,1);
        result.put(50,1);
        result.put(51,5);
        result.put(52,5);
        result.put(53,4);
        result.put(54,4);
        result.put(55,3);
        result.put(56,3);
        result.put(57,2);
        result.put(58,2);
        result.put(59,1);
        result.put(60,1);
        result.put(61,3);
        result.put(62,3);
        result.put(63,1);
        result.put(64,1);
        result.put(65,1);
        result.put(66,1);
        result.put(67,1);
        result.put(68,1);
        result.put(69,1);
        result.put(70,1);
        result.put(71,5);
        result.put(72,5);
        result.put(73,4);
        result.put(74,4);
        result.put(75,3);
        result.put(76,3);
        result.put(77,2);
        result.put(78,2);
        result.put(79,1);
        result.put(80,1);
        result.put(81,5);
        result.put(82,3);
        result.put(83,1);
        result.put(84,1);
        result.put(85,1);
        result.put(86,1);
        result.put(87,1);
        result.put(88,1);
        result.put(89,1);
        result.put(90,12);
        result.put(91,11);
        result.put(92,11);
        result.put(93,11);
        result.put(94,12);
        result.put(95,17);
        result.put(96,10);
        result.put(97,15);
        result.put(98,11);
        result.put(99,16);
        result.put(100,10);

        return result;
    }

}
